CREATE TABLE QUIZ_TABLE(

    Q_ID       NUMBER(3, 0)  NOT NULL ,
    Q_CONTENT  VARCHAR2(200) NOT NULL ,
    Q_ANSWER   VARCHAR2(100) ,
    REG_DATE   DATE DEFAULT SYSDATE
    
);

SELECT * FROM QUIZ_TABLE;

INSERT INTO QUIZ_TABLE(
    Q_ID
    , Q_CONTENT
    , Q_ANSWER
) VALUES(
    1
    , '쥐는 영어로 무엇일까요?'
    , 'mouse'
);

INSERT INTO QUIZ_TABLE(
    Q_ID
    , Q_CONTENT
    , Q_ANSWER
) VALUES(
    2
    , '달력은 영어로 무엇일까요?'
    , 'calendar'
);

INSERT INTO QUIZ_TABLE(
    Q_ID
    , Q_CONTENT
    , Q_ANSWER
) VALUES(
    3
    , '종이는 영어로 무엇일까요?'
    , 'paper'
);

-- 테이블당 무조건 하나의 PRIMARY KEY가 있어야 합니다.
-- UNIQUE 키는 테이블당 여러개 보유 가능

ALTER TABLE QUIZ_TABLE ADD CONSTRAINT UK_QUIZ_TABLE UNIQUE (Q_CONTENT);


ALTER TABLE QUIZ_TABLE ADD CONSTRAINT PK_QUIZ_TABLE PRIMARY KEY (Q_ID);
SELECT * FROM QUIZ_TABLE;

INSERT INTO QUIZ_TABLE
VALUES(
    4
    , '쥐는 영어로 무엇일까요?'
    , 'mouse'
    ,SYSDATE
);
ALTER TABLE TB_MEMBER ADD CONSTRAINT CK_DEL_YN CHECK( DEL_YN IN ('Y', 'N'));

ALTER TABLE TB_MEMBER_TEL DROP CONSTRAINT FK_MEMBER;

ALTER TABLE TB_MEMBER_TEL ADD CONSTRAINT FK_MEMBER
FOREIGN KEY (MEMBER_ID) REFERENCES TB_MEMBER(MEMBER_ID);

// 문제1
CREATE TABLE STUDENT (
      학생ID      VARCHAR2(10) NOT NULL
    , 학생이름     VARCHAR2(20) NOT NULL
    , 가입일시     DATE
    , 나이        NUMBER  DEFAULT 0
);

CREATE TABLE STUDENT_TEL (
      학생ID      VARCHAR2(10) NOT NULL
    , 구분코드     VARCHAR2(10) NOT NULL
    , 연락처      VARCHAR2(15) NOT NULL
);

CREATE TABLE STUDENT_ADDR (
      학생ID      VARCHAR2(10) NOT NULL
    , 도로명주소   VARCHAR2(200) NOT NULL
);

//문제2
ALTER TABLE STUDENT ADD CONSTRAINT PK_STUDENT PRIMARY KEY(학생ID);
ALTER TABLE STUDENT_TEL ADD CONSTRAINT PK_STUDENT_TEL PRIMARY KEY(학생ID, 구분코드);
ALTER TABLE STUDENT_ADDR ADD CONSTRAINT PK_STUDENT_ADDR PRIMARY KEY(학생ID);

//문제3
ALTER TABLE STUDENT_TEL ADD CONSTRAINT FK_STUDENT_TEL
FOREIGN KEY (학생ID) REFERENCES STUDENT(학생ID);

ALTER TABLE STUDENT_ADDR ADD CONSTRAINT FK_STUDENT_ADDR
FOREIGN KEY (학생ID) REFERENCES STUDENT(학생ID);

ALTER TABLE TB_MEMBER ADD (BIRTH VARCHAR2(8));
SELECT * FROM TB_MEMBER;    

ALTER TABLE TB_MEMBER DROP COLUMN BIRTH;
ALTER TABLE TB_MEMBER MODIFY (PASSWD VARCHAR2(50));

ALTER TABLE STUDENT RENAME COLUMN 학생ID TO STUDENT_ID;
SELECT * FROM STUDENT;

DROP TABLE STUDENT CASCADE CONSTRAINT;


SELECT * FROM 성적표;

CREATE SEQUENCE ORDER_NO_SEQ
       INCREMENT BY 1
       START WITH 1;

SELECT ORDER_NO_SEQ.NEXTVAL FROM DUAL;

INSERT INTO TB_ORDER ( 
ORDER_NO
, MEMBER_ID
, PRD_ID
, ORDER_DATE
, ORDER_CNT
, ORDER_PRICE 
) VALUES ( 
ORDER_NO_SEQ.NEXTVAL
, 'BBBBB'
, 'P0003' 
, SYSDATE
, 2 
, 1200000
) ;
SELECT * FROM TB_ORDER;

ROLLBACK;

DROP SEQUENCE ORDER_NO_SEQ;

CREATE VIEW MEMBER_SIMPLE_VIEW AS
SELECT A.MEMBER_ID
     , A.GRADE_CD
     , B.TEL_NO
  FROM TB_MEMBER A
     , TB_MEMBER_TEL B
 WHERE A.MEMBER_ID = B.MEMBER_ID
   AND B.TEL_DV_CD = '휴대폰';

SELECT * 
  FROM (
      SELECT A.MEMBER_ID
         , A.GRADE_CD
         , B.TEL_NO
      FROM TB_MEMBER A
         , TB_MEMBER_TEL B
     WHERE A.MEMBER_ID = B.MEMBER_ID
       AND B.TEL_DV_CD = '휴대폰'
)
 WHERE MEMBER_ID = 'AAAAA';
DROP VIEW MEMBER_SIMPLE_VIEW;














